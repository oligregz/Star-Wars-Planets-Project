{"version":3,"sources":["components/filterInput/FilterInput.jsx","components/filterSelect/FilterSelect.jsx","context/GloblaContext.jsx","components/inputSearch/InputSearch.jsx","components/filterHeader/FilterHeader.jsx","components/button/Button.jsx","components/header/Header.jsx","components/tableHeader/TableHeader.jsx","components/tableBody/TableBody.jsx","components/table/Table.jsx","service/api.js","context/GlobalProvider.jsx","App.jsx","index.js"],"names":["FilterInput","props","value","handleChange","className","type","data-testid","onChange","event","target","FilterSelect","dataTestId","valuesArray","id","map","values","index","key","GlobalContext","createContext","InputSearch","useContext","search","setSearch","FilterHeader","column","setColumn","comparison","setComparison","setValue","filter","valuesArr","data","filterNumberValues","filters","reduce","acc","curr","every","value2","push","filterColum","Button","setFilter","validation","document","getElementById","onClick","Header","TableHeader","TableBody","bodyArr","arrayAPI","infoData","searchValue","filterX","results","planets","name","includes","planet","Number","filterManager","Table","getApi","fetch","then","response","json","catch","err","GlobalProvider","children","useState","setData","useEffect","valueApi","Provider","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.0c61738c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport \"./style.css\";\n\nfunction FilterInput(props) {\n  const {\n    value,\n    handleChange,\n  } = props;\n  return (\n    <input\n      className=\"filterInput\"\n      type=\"number\"\n      data-testid=\"value-filter\"\n      value={ value }\n      onChange={ (event) => handleChange(event.target.value) }\n    />\n  );\n}\n\nFilterInput.propTypes = {\n  handleChange: PropTypes.func,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default FilterInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./style.css\";\n\nfunction FilterSelect(props) {\n  const {\n    value,\n    handleChange,\n    dataTestId,\n    valuesArray,\n    id,\n  } = props;\n  return (\n    <select\n      className='sel'\n      data-testid={ dataTestId }\n      value={ value }\n      id={ id }\n      onChange={ (event) => handleChange(event.target.value) }\n    >\n      {valuesArray.map((values, index) => (\n        <option\n          className='opt'\n          key={ index }\n          value={ values }\n          >\n            { values }\n          </option>\n      ))}\n    </select>\n  );\n}\n\nFilterSelect.propTypes = {\n  dataTestId: PropTypes.string,\n  handleChange: PropTypes.func,\n  value: PropTypes.string,\n  valuesArray: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string,\n}.isRequired;\n\nexport default FilterSelect;\n","import { createContext } from 'react';\n\nconst GlobalContext = createContext();\n\nexport default GlobalContext;\n","import React, { useContext } from 'react';\nimport GlobalContext from '../../context/GloblaContext';\nimport \"./style.css\";\n\nfunction InputSearch() {\n  const { search, setSearch } = useContext(GlobalContext);\n  return (\n    <input\n      className=\"inputSearch\"\n      type=\"text\"\n      data-testid=\"name-filter\"\n      value={ search }\n      onChange={ (event) => {\n        setSearch(event.target.value);\n      } }\n    />\n  );\n}\n\nexport default InputSearch;\n","import React, { useContext } from 'react';\nimport FilterInput from '../filterInput/FilterInput';\nimport FilterSelect from '../filterSelect/FilterSelect';\nimport GlobalContext from '../../context/GloblaContext';\n\nimport InputSearch from '../inputSearch/InputSearch';\n\nfunction FilterHeader() {\n  const {\n    column,\n    setColumn,\n    comparison,\n    setComparison,\n    value,\n    setValue,\n    filter,\n  } = useContext(GlobalContext);\n\n  const valuesArr = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n\n  function filterColum(data) {\n    const { filterNumberValues } = data.filters;\n    return valuesArr.reduce((acc, curr) => {\n      if (filterNumberValues.every((value2) => value2.column !== curr)) {\n        acc.push(curr);\n      }\n      return acc;\n    }, []);\n  }\n\n  return (\n    <div className=\"headFilters\">\n        <InputSearch />\n        <FilterSelect\n          dataTestId=\"column-filter\"\n          value={ column }\n          id=\"column\"\n          handleChange={ setColumn }\n          valuesArray={ filterColum(filter) }\n        />\n        <FilterSelect\n          dataTestId=\"comparison-filter\"\n          value={ comparison }\n          id=\"comparison\"\n          handleChange={ setComparison }\n          valuesArray={ [\n            'maior que',\n            'menor que',\n            'igual a',\n          ] }\n        />\n        <FilterInput\n          value={ value }\n          handleChange={ setValue }\n        />\n    </div>\n  );\n}\nexport default FilterHeader;\n","import React, { useContext } from 'react';\nimport GlobalContext from '../../context/GloblaContext';\nimport \"./style.css\";\n\nfunction Button() {\n  const {\n    filter,\n    setFilter,\n    column,\n    comparison,\n    value,\n  } = useContext(GlobalContext);\n\n  function validation(id) {\n    return document.getElementById(id).value;\n  }\n\n  function filterVerify(values) {\n    values.setFilter({\n      filters: {\n        ...values.filter.filters,\n        filterNumberValues: [\n          {\n            column: values.column || validation('column'),\n            comparison: values.comparison || validation('comparison'),\n            value: values.value,\n          },\n          ...values.filter.filters.filterNumberValues,\n        ],\n      },\n    });\n  }\n\n  return (\n    <button\n      className='btn fifth'\n      data-testid=\"button-filter\"\n      type=\"button\"\n      onClick={ () => filterVerify({\n        filter,\n        setFilter,\n        column,\n        comparison,\n        value,\n      }) }\n    >\n      Filtrar\n    </button>\n\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport FilterHeader from '../filterHeader/FilterHeader';\nimport Button from '../button/Button';\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"head\">\n      <h1>{\" STAR WARS PALNETS \"}</h1>\n      <div className=\"caseFilter\">\n        <FilterHeader />\n      </div>\n      <div className='caseBtn'>\n        <Button />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction TableHeader() {\n  const headerArr = ['Name', 'Rotation Period', 'Orbital Period', 'Diameter', 'Climate',\n    'Gravity', 'Terrain', 'Surface Water', 'Population', 'Films', 'Created', 'Edited',\n    'URL'];\n  return (\n    <thead>\n      <tr>\n        { headerArr.map((data) => (\n          <th key={ data }>{ data }</th>\n        )) }\n      </tr>\n    </thead>\n\n  );\n}\n\nexport default TableHeader;\n","import React, { useContext } from 'react';\nimport GlobalContext from '../../context/GloblaContext';\n\nfunction TableBody() {\n  const {\n    data,\n    search,\n    filter,\n  } = useContext(GlobalContext);\n  const bodyArr = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate',\n    'gravity', 'terrain', 'surface_water', 'population', 'films', 'created', 'edited',\n    'url'];\n\n  const filterManager = (infoData, searchValue, filterX) => {\n    if (!infoData) return [];\n    if (searchValue) {\n      return infoData.results.filter((planets) => planets.name.includes(searchValue));\n    }\n    const { column, comparison, value } = filterX.filters.filterNumberValues[0];\n    if ([column, comparison, value].every((value2) => value2 !== '')) {\n      if (comparison === 'maior que') {\n        return infoData.results.filter((planet) => planet[column] > Number(value));\n      }\n      if (comparison === 'menor que') {\n        return infoData.results.filter((planet) => planet[column] < Number(value));\n      }\n      if (comparison === 'igual a') {\n        return infoData.results.filter((planet) => planet[column] === value);\n      }\n    }\n    return infoData.results;\n  };\n\n  const arrayAPI = filterManager(data, search, filter);\n\n  return (\n    <tbody>\n      { arrayAPI.map((planet) => (\n        <tr key={ planet.name }>\n          { bodyArr.map((value, index) => (\n            <td key={ `${index}_${value}` }>\n              { planet[value] }\n            </td>\n          )) }\n        </tr>\n      )) }\n    </tbody>\n  );\n}\nexport default TableBody;\n","import React from 'react';\nimport Header from '../header/Header';\nimport TableHeader from '../tableHeader/TableHeader';\nimport TableBody from '../tableBody/TableBody';\nimport \"./style.css\";\n\nfunction Table() {\n  return (\n    <div className=\"tableMain\">\n      <div className=\"tableChild\">\n        <Header />\n        <table>\n          <TableHeader />\n          <TableBody />\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Table;\n","const endApi = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst getApi = () => fetch(endApi)\n  .then((response) => response.json())\n  .then((data) => data)\n  .catch((err) => err);\n\nexport default getApi;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GlobalContext from './GloblaContext';\nimport getApi from '../service/api';\n\nfunction GlobalProvider({ children }) {\n  const [data, setData] = useState(null);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [search, setSearch] = useState();\n  const [filter, setFilter] = useState({\n    filters: {\n      filterNumberValues: [{\n        column,\n        comparison,\n        value,\n      }],\n    },\n  });\n\n  useEffect(() => {\n    const handleApi = () => {\n      getApi()\n        .then((valueApi) => setData(valueApi));\n    };\n    handleApi();\n  }, []);\n\n  return (\n    <GlobalContext.Provider\n      value={ {\n        data,\n        column,\n        setColumn,\n        comparison,\n        setComparison,\n        value,\n        setValue,\n        search,\n        setSearch,\n        filter,\n        setFilter,\n      } }\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n\nGlobalProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default GlobalProvider;\n","import React from 'react';\nimport Table from './components/table/Table';\nimport GlobalProvider from './context/GlobalProvider';\nimport \"./style.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Table />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}